function [fitresult, gof] = createFitTFnz(x, y)
%CREATEFIT(X,Y)
%  Create a fit.
%
%  Data for 'TF fit to n_z' fit:
%      X Input : x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 16-Feb-2016 01:44:05


%% Fit: 'TF fit to n_z'.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = fittype( 'amp*real((1-c*(x-x0)^2)^(3/2))', 'independent', 'x', 'dependent', 'y' );
excludedPoints = excludedata( xData, yData, 'Indices', [16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200] );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.Display = 'Off';
opts.Robust = 'Bisquare';
opts.StartPoint = [100 0.0148305007384264 110];
opts.Exclude = excludedPoints;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'TF fit to n_z' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult, xData, yData, excludedPoints );
legend( h, 'y vs. x', 'Excluded y vs. x', 'TF fit to n_z', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult, xData, yData, excludedPoints, 'residuals' );
legend( h, 'TF fit to n_z - residuals', 'Excluded y vs. x', 'Zero Line', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
grid on


